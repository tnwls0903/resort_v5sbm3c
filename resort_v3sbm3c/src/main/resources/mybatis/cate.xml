<?xml version="1.0" encoding="UTF-8"?>
 
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dev.mvc.cate.CateDAOInter"> <!-- SB가 자동으로 구현하여 연동하는 interface -->
  <insert id="create" parameterType="dev.mvc.cate.CateVO"> <!-- public int create(CateVO cateVO) {...-->
    INSERT INTO cate(cateno, name, namesub, cnt, rdate, seqno, visible)
    VALUES(CATE_SEQ.nextval, #{name}, #{namesub}, 0, sysdate, #{seqno}, 'Y')
  </insert>
  
  <!-- SQL -> CateVO -> ArrayList<CateVO> return -->
  <select id="list_all" resultType="dev.mvc.cate.CateVO">
    SELECT cateno, name, namesub, cnt, rdate, seqno, visible
    FROM cate
    ORDER BY seqno ASC
  </select>

  <!-- SQL -> CateVO return -->
  <select id="read" resultType="dev.mvc.cate.CateVO" parameterType="Integer">
    SELECT cateno, name, namesub, cnt, rdate, seqno, visible
    FROM cate
    WHERE cateno=#{cateno}
  </select>
  
  <!-- 수정, return: 수정한 레코드 갯수, parameterType: 수정할 레코드 정보 -->
  <update id="update" parameterType="dev.mvc.cate.CateVO">
    UPDATE cate
    SET name=#{name}, namesub=#{namesub}, cnt=#{cnt}, rdate=sysdate, seqno=#{seqno}, visible=#{visible}
    WHERE cateno=#{cateno}
  </update>
  
  <delete id="delete" parameterType="Integer">
    DELETE FROM cate WHERE cateno=#{cateno}
  </delete>

  <!-- 우선 순위 높임, 10 등 -> 1 등 -->
  <update id="update_seqno_forward" parameterType="Integer">
    UPDATE cate
    SET seqno= seqno -1
    WHERE cateno = #{cateno}
  </update>

  <!-- 우선 순위 낮춤, 1 등 -> 10 등 -->
  <update id="update_seqno_backward" parameterType="Integer">
    UPDATE cate
    SET seqno= seqno +1
    WHERE cateno = #{cateno}
  </update>

  <!-- 카테고리 공개 설정 -->
  <update id="update_visible_y" parameterType="Integer">
    UPDATE cate SET visible='Y' WHERE cateno=#{cateno}
  </update>
  
  <!-- 카테고리 비공개 설정 -->
  <update id="update_visible_n" parameterType="Integer">
    UPDATE cate SET visible='N' WHERE cateno=#{cateno}
  </update>

  <!-- 회원/비회원에게 공개할 중분류 목록 -->
  <!-- SQL -> CateVO -> ArrayList<CateVO> return -->
  <select id="list_all_name_y" resultType="dev.mvc.cate.CateVO">
    SELECT cateno, name, seqno, visible
    FROM cate 
    WHERE name IN (
        SELECT DISTINCT name
        FROM cate
    ) AND namesub = '-' AND visible='Y'
    ORDER BY seqno ASC
  </select>

  <!-- 회원/비회원에게 공개할 소분류 목록 -->
  <!-- SQL -> CateVO -> ArrayList<CateVO> return -->
  <select id="list_all_namesub_y" resultType="dev.mvc.cate.CateVO" parameterType="String">
    SELECT cateno, name, namesub, cnt, rdate, seqno, visible
    FROM cate
    WHERE name=#{name} AND namesub != '-' AND visible='Y'
    ORDER BY seqno ASC
  </select>

  <!-- 관리자용 검색 목록, Map은 VO class보다 적은 변수의 전달시 사용 -->
  <!-- SQL -> CateVO -> ArrayList<CateVO> return -->
  <select id="list_search" resultType="dev.mvc.cate.CateVO" parameterType="String">
    SELECT cateno, name, namesub, cnt, rdate, seqno, visible
    FROM cate
    
    <if test="word != null and word != ''">
      WHERE UPPER(name) LIKE '%' || UPPER(#{word}) || '%' OR UPPER(namesub) LIKE '%' || UPPER(#{word}) || '%'  
    </if>
        
    ORDER BY seqno ASC
  </select>

  <!-- 관리자용 검색 목록, Map은 VO class보다 적은 변수의 전달시 사용 -->
  <!-- SQL -> CateVO -> ArrayList<CateVO> return -->
  <select id="list_search_paging" resultType="dev.mvc.cate.CateVO" parameterType="Map">
    SELECT cateno, name, namesub, cnt, rdate, seqno, visible, r
    FROM (
        SELECT cateno, name, namesub, cnt, rdate, seqno, visible, rownum as r
        FROM (
            SELECT cateno, name, namesub, cnt, rdate, seqno, visible
            FROM cate
            
            <if test="word != null and word != ''">
              WHERE UPPER(name) LIKE '%' || UPPER(#{word}) || '%' OR UPPER(namesub) LIKE '%' || UPPER(#{word}) || '%'
            </if>
         
            ORDER BY seqno ASC
        )
    )
    WHERE r &gt; = #{start_num} AND r &lt; = #{end_num} <!-- WHERE r >= 1 AND r <= 3 -->
  </select>

  <!-- 검색된 레코드 수 -->
  <select id="list_search_count" resultType="int" parameterType="String">
    SELECT COUNT(*) as cnt
    FROM cate
    
    <if test="word != null and word != ''">
      WHERE UPPER(name) LIKE '%' || UPPER(#{word}) || '%' OR UPPER(namesub) LIKE '%' || UPPER(#{word}) || '%'  
    </if>
        
    ORDER BY seqno ASC
  </select>
                
</mapper>










