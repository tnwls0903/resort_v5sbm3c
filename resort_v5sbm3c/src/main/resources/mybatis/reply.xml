<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- SB가 자동으로 구현하여 연동하는 interface -->
<mapper namespace="dev.mvc.reply.ReplyDAOInter"> <!-- SB가 자동으로 구현하여 연동하는 interface -->
  <insert id="create" parameterType="dev.mvc.reply.ReplyVO">
    INSERT INTO reply(replyno, contentsno, memberno, content, rdate)
    VALUES(reply_seq.nextval, #{contentsno}, #{memberno}, #{content}, sysdate)
  </insert>
  
  <select id="list" resultType="dev.mvc.reply.ReplyVO">
    SELECT replyno, contentsno, memberno, content, rdate
    FROM reply
    ORDER BY replyno DESC
  </select>

  <select id="list_by_contentsno" resultType="dev.mvc.reply.ReplyVO" parameterType="int">
    SELECT replyno, contentsno, memberno, content, rdate
    FROM reply
    WHERE contentsno=#{contentsno}
    ORDER BY replyno DESC
  </select>

  <!-- <select id="checkPasswd" parameterType="HashMap" resultType="int"> -->
  <!-- <select id="checkPasswd" parameterType="ReplyVO" resultType="int"> -->
  <!-- <select id="checkPasswd" parameterType="Map" resultType="int"> -->

  <select id="read" resultType="dev.mvc.reply.ReplyVO" parameterType="int">
    SELECT replyno, contentsno, memberno, content, rdate
    FROM reply
    WHERE replyno = #{replyno}
  </select>

  <update id="update" parameterType="dev.mvc.reply.ReplyVO">
    UPDATE reply SET content=#{content}
    WHERE replyno = #{replyno}
  </update>
    
  <delete id="delete" parameterType="int">
    DELETE FROM reply
    WHERE replyno=#{replyno}
  </delete>
  
  <!-- 모든 목록 -->
  <select id="list_by_contentsno_join" resultType="dev.mvc.reply.ReplyMemberVO" parameterType="int">
    SELECT m.id,
               r.replyno, r.contentsno, r.memberno, r.content, r.rdate
    FROM member m,  reply r
    WHERE (m.memberno = r.memberno) AND r.contentsno=#{contentsno}
    ORDER BY r.replyno DESC
  </select>
  
  <!-- 최신글 500건 -->
  <select id="list_by_contentsno_join_500" resultType="dev.mvc.reply.ReplyMemberVO" parameterType="int">
    SELECT id, replyno, contentsno, memberno, content, rdate, r
    FROM (
          SELECT id, replyno, contentsno,memberno, content, rdate,rownum as r
          FROM (
                SELECT  m.id, 
                         p.replyno, p.contentsno, p.memberno, p.content, p.rdate
                FROM member m, reply p       
                WHERE (m.memberno = p.memberno) AND p.contentsno=#{contentsno}
                ORDER BY p.replyno DESC
          )
    )
    WHERE r &lt;= 500
  </select>
  
 
</mapper>




